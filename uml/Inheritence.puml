@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + increaseHp(int increase):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }
abstract class EnemyAircraft
{
    + EnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + {abstract} shoot():List<BaseBullet>
    + {abstract} propnum():int
}

AbstractAircraft <|-- EnemyAircraft

class HeroAircraft {
    - shootNum:int
    - power:int
    - direction:int
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + isElite():boolean
    + shoot():List<BaseBullet>
}

AbstractAircraft <|-- HeroAircraft

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + getDirection():int
    + getShootNum():int
    + getPower():int
    + shoot():List<BaseBullet>
    + propnum():int
}
EnemyAircraft <|-- MobEnemy

class EliteEnemy {
    - shootNum:int
    - power:int
    - direction:int
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + getDirection():int
    + getShootNum():int
    + getPower():int
    + shoot():List<BaseBullet>
    + propnum():int
}
EnemyAircraft <|-- EliteEnemy

class ElitePlus {
    - shootNum:int
    - power:int
    - direction:int
    + ElitePlus(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + getDirection():int
    + getShootNum():int
    + getPower():int
    + shoot():List<BaseBullet>
    + propnum():int
}
EnemyAircraft <|-- ElitePlus

class Boss {
    - shootNum:int
    - power:int
    - direction:int
    + Boss(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + getDirection():int
    + getShootNum():int
    + getPower():int
    + shoot():List<BaseBullet>
    + propnum():int
}
EnemyAircraft <|-- Boss


abstract class BaseBullet
{
    - power:int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

abstract class BaseProp
{
    # lock:Object
    # thread:Thread
    + BaseProp(int locationX, int locationY,
     int speedX, int speedY)
    + getType():int
    + {abstract} effect(HeroAircraft heroAircraft, List<EnemyAircraft> enemyAircrafts,
    List<BaseBullet> enemyBullets):void
    # interruptThread():void
    # applyEffect(int newBulletCount, HeroAircraft heroAircraft):void

}

class PropBlood {
    + PropBlood(int locationX, int locationY,
     int speedX, int speedY)
    + forward():void
    + effect(HeroAircraft heroAircraft, List<EnemyAircraft> enemyAircrafts,
    List<BaseBullet> enemyBullets):void
}

class PropBomb {
    + PropBomb(int locationX, int locationY,
     int speedX, int speedY)
    + forward():void
    + effect(HeroAircraft heroAircraft, List<EnemyAircraft> enemyAircrafts,
    List<BaseBullet> enemyBullets):void
}

class PropBullet {
    + PropBullet(int locationX, int locationY,
     int speedX, int speedY)
    + effect(HeroAircraft heroAircraft, List<EnemyAircraft> enemyAircrafts,
    List<BaseBullet> enemyBullets):void
}

class PropBulletPlus {
    + PropBulletPlus(int locationX, int locationY,
     int speedX, int speedY)
    + effect(HeroAircraft heroAircraft, List<EnemyAircraft> enemyAircrafts,
    List<BaseBullet> enemyBullets):void
}

BaseProp <|-- PropBlood
BaseProp <|-- PropBomb
BaseProp <|-- PropBullet
BaseProp <|-- PropBulletPlus

AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- BaseProp


@enduml